package com.qiren.project.ui;

import com.qiren.project.pojo.Semester;
import com.qiren.project.pojo.Subject;
import com.qiren.project.services.CoursePlanService;
import com.qiren.project.services.ServiceBuilder;
import com.qiren.project.services.UserService;

import javax.swing.*;
import java.awt.*;
import java.util.List;

/**
 * Although extends abstract page,
 * this page is not inner page, only a page for the dialog.
 */
public class FilterPlanPage extends AbstractPage {
    private JPanel mainPanel;
    private JTextField searchField;
    private JComboBox statusBox;
    private JComboBox semBox;
    private JComboBox subjBox;
    private JButton doSearchButton;

    public FilterPlanPage() {
        // this constructor is in case that I want to use PageBuilder in the future
    }

    public FilterPlanPage(JFrame frame) {
        pageInit(frame);
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    @Override
    public void pageInit(JFrame frame) {
        // not use for now
        doSearchButton.setVisible(false);
        CoursePlanService coursePlanService =
                ServiceBuilder.getInstance().build(CoursePlanService.class);
        List<Semester> semesterList = coursePlanService.getSemesterList();
        for (Semester sem : semesterList) {
            semBox.addItem(sem.getSemName());
        }
        List<Subject> subject = coursePlanService.getSubjectList();
        for (Subject s : subject) {
            subjBox.addItem(s.getSubjectId());
        }
    }

    public String getSearchStatement() {
        StringBuilder sb = new StringBuilder();
        String status = switch (statusBox.getSelectedIndex()) {
            case 1 -> "t"; // open
            case 2 -> "a"; // closed
            case 3 -> "c"; // cancelled
            default -> null;
        };
        String sem = semBox.getSelectedItem().toString();
        String subj = subjBox.getSelectedItem().toString();
        String searchClause = searchField.getText();
        if (null != status) {
            sb.append(" where status = ").append("'").append(status).append("'");
        }
        if (!"None".equals(sem)) {
            if (sb.isEmpty()) {
                sb.append(" where");
                sb.append(" fkSem = ").append("'").append(sem).append("'");
            } else {
                sb.append(" and");
                sb.append(" fkSem = ").append("'").append(sem).append("'");
            }
        }
        if (!"None".equals(subj)) {
            if (sb.isEmpty()) {
                sb.append(" where");
                sb.append(" fkCourse like ").append("'%").append(subj).append("%'");
            } else {
                sb.append(" and");
                sb.append(" fkCourse like ").append("'%").append(subj).append("%'");
            }
        }
        if (!searchClause.isBlank()) {
            if (sb.isEmpty()) {
                sb.append(" where");
                sb.append(" fkCourse like ").append("'%").append(searchClause).append("%'");
            } else {
                sb.append(" and");
                sb.append(" fkCourse like ").append("'%").append(searchClause).append("%'");
            }
        }
        UserService service = ServiceBuilder.getInstance().build(UserService.class);
        if (service.isStaff()) {
            if (sb.isEmpty()) {
                sb.append(" where");
                sb.append(" fkStaff = ").append("'").append(service.getUserName()).append("'");
            } else {
                sb.append(" and");
                sb.append(" fkStaff = ").append("'").append(service.getUserName()).append("'");
            }
        }
        return sb.toString();
    }

    @Override
    public String getTitle() {
        return "Filter Page";
    }

    @Override
    public JPanel getPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, BorderLayout.CENTER);
        final JLabel label1 = new JLabel();
        label1.setText("Search With Name: ");
        panel1.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        searchField = new JTextField();
        panel1.add(searchField, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Search With Status: ");
        panel1.add(label2, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        statusBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("None");
        defaultComboBoxModel1.addElement("open");
        defaultComboBoxModel1.addElement("closed");
        defaultComboBoxModel1.addElement("cancelled");
        statusBox.setModel(defaultComboBoxModel1);
        panel1.add(statusBox, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Search With Semester:");
        panel1.add(label3, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        semBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel2 = new DefaultComboBoxModel();
        defaultComboBoxModel2.addElement("None");
        semBox.setModel(defaultComboBoxModel2);
        panel1.add(semBox, new com.intellij.uiDesigner.core.GridConstraints(2, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Search With Subject: ");
        panel1.add(label4, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        subjBox = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel3 = new DefaultComboBoxModel();
        defaultComboBoxModel3.addElement("None");
        subjBox.setModel(defaultComboBoxModel3);
        panel1.add(subjBox, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("<html>Do Filter<br>(No selection means all)</html>");
        panel1.add(label5, new com.intellij.uiDesigner.core.GridConstraints(4, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        doSearchButton = new JButton();
        doSearchButton.setText("Do Search");
        panel1.add(doSearchButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
