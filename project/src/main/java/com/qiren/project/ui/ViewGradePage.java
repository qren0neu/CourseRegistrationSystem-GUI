package com.qiren.project.ui;

import com.qiren.project.pojo.RegistrationPlan;
import com.qiren.project.services.RegistrationService;
import com.qiren.project.services.ServiceBuilder;
import com.qiren.project.util.CoreUtils;

import javax.swing.*;
import java.awt.*;
import java.util.List;

public class ViewGradePage extends AbstractPage {
    private JPanel mainPanel;
    private JLabel gradelbl;
    private JPanel listPanel;

    private RegistrationService registrationService =
            ServiceBuilder.getInstance().build(RegistrationService.class);

    @Override
    public void pageInit(JFrame frame) {
        List<RegistrationPlan> plans = registrationService.getRegistration();
        if (null == plans || plans.isEmpty()) {
            CoreUtils.showErrorDialog(frame, "There is no grade now!");
            return;
        }
        String base = """
                <html>
                <b>Course Name:&nbsp;</b>%replace1%<br>
                <b>Lecturer:&nbsp;</b>%replace2%<br>
                <b>Semester:&nbsp;</b>%replace3%<br>
                <b>Grade:&nbsp;</b>%replace4%<br>
                </html>
                """;
        listPanel.setLayout(new BoxLayout(listPanel, BoxLayout.Y_AXIS));
        double sumOfGrade = 0;
        int count = 0;
        for (RegistrationPlan plan : plans) {
            if (null == plan.getGrade() || plan.getGrade().isBlank()) {
                continue;
            }
            double grade = Double.parseDouble(plan.getGrade());
            if (grade <= 0) {
                continue;
            }
            JPanel itemPanel = new JPanel();
            itemPanel.setLayout(new BoxLayout(itemPanel, BoxLayout.X_AXIS));
            itemPanel.add(new JLabel(
                    CoreUtils.customFormat(base, plan.getFkCourse(), plan.getFkStaff(), plan.getFkSem(), plan.getGrade())));
            JButton messageButton = new JButton("Send A Message");
            messageButton.addActionListener(e -> {
                JOptionPane.showMessageDialog(
                        frame,
                        new MessageBox(frame,
                                plan.getFkStaff(), "").getMainPanel(),
                        "Leave a Message",
                        JOptionPane.INFORMATION_MESSAGE
                );
            });
            JPanel buttonPanel = new JPanel();
            buttonPanel.setLayout(new BoxLayout(buttonPanel, BoxLayout.Y_AXIS));
            buttonPanel.add(messageButton);
            itemPanel.add(buttonPanel);
            listPanel.add(itemPanel);
            listPanel.add(Box.createRigidArea(new Dimension(0, 10)));
            sumOfGrade += Double.parseDouble(plan.getGrade());
            count++;
        }
        gradelbl.setText((sumOfGrade / count) + "");
    }

    @Override
    public String getTitle() {
        return "View Grade";
    }

    @Override
    public JPanel getPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, BorderLayout.NORTH);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel1.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Average Grade: ");
        panel2.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gradelbl = new JLabel();
        gradelbl.setText("lbl");
        panel2.add(gradelbl, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, BorderLayout.CENTER);
        listPanel = new JPanel();
        listPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane1.setViewportView(listPanel);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
