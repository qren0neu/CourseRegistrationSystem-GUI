package com.qiren.project.ui;

import com.qiren.project.pojo.CoursePlan;
import com.qiren.project.pojo.Semester;
import com.qiren.project.services.CoursePlanService;
import com.qiren.project.services.ServiceBuilder;
import com.qiren.project.services.UserService;
import com.qiren.project.util.CoreUtils;

import javax.swing.*;
import java.awt.*;
import java.util.List;
import java.util.Map;

public class SyllabusPage extends AbstractPage {
    private JPanel mainPanel;
    private JPanel listPanel;
    private JLabel courseNamelabel;
    private JButton contactLecurerButton;
    private String semId;
    private String coursePlanId;

    private Semester semester;

    private CoursePlanService coursePlanService =
            ServiceBuilder.getInstance().build(CoursePlanService.class);

    @Override
    public void pageInit(JFrame frame) {
        listPanel.setLayout(new BoxLayout(listPanel, BoxLayout.Y_AXIS));
        List<Semester> semesters = coursePlanService.getSemesterList();
        for (Semester s : semesters) {
            if (s.getSemName().equals(semId)) {
                this.semester = s;
                break;
            }
        }

        CoursePlan coursePlan = coursePlanService.getById(coursePlanId);
        String weekday = coursePlan.getWeekDay();

        courseNamelabel.setText(coursePlan.getFkCourse());

        List<String> weeklist =
                CoreUtils.getWeekInPeriod(weekday,
                        semester.getFromDate(), semester.getToDate(),
                        coursePlan.getFromTime(), coursePlan.getToTime());

        for (String week : weeklist) {
            JPanel itemPanel = new JPanel();
            itemPanel.setLayout(new BoxLayout(itemPanel, BoxLayout.X_AXIS));
            itemPanel.add(new JLabel(week));

            listPanel.add(itemPanel);
            listPanel.add(Box.createRigidArea(new Dimension(0, 10)));
        }

        contactLecurerButton.addActionListener(e -> {
            JOptionPane.showMessageDialog(
                    frame,
                    new MessageBox(frame,
                            coursePlan.getFkStaff(), "").getMainPanel(),
                    "Leave a Message",
                    JOptionPane.INFORMATION_MESSAGE
            );
        });
        UserService userService = ServiceBuilder.getInstance().build(UserService.class);
        if (userService.isStaff()) {
            contactLecurerButton.setVisible(false);
        }
    }

    @Override
    public void pageInit(JFrame frame, Map<String, String> extras) {
        super.pageInit(frame, extras);
        semId = extras.get("semester");
        coursePlanId = extras.get("course");
        pageInit(frame);
    }

    @Override
    public String getTitle() {
        return "View Schedule";
    }

    @Override
    public JPanel getPanel() {
        return mainPanel;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new BorderLayout(0, 0));
        final JScrollPane scrollPane1 = new JScrollPane();
        mainPanel.add(scrollPane1, BorderLayout.CENTER);
        listPanel = new JPanel();
        listPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 1, new Insets(0, 0, 0, 0), -1, -1));
        scrollPane1.setViewportView(listPanel);
        courseNamelabel = new JLabel();
        courseNamelabel.setText("Label");
        listPanel.add(courseNamelabel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer1 = new com.intellij.uiDesigner.core.Spacer();
        listPanel.add(spacer1, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_VERTICAL, 1, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        mainPanel.add(panel1, BorderLayout.SOUTH);
        contactLecurerButton = new JButton();
        contactLecurerButton.setText("Contact Lecurer");
        panel1.add(contactLecurerButton, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final com.intellij.uiDesigner.core.Spacer spacer2 = new com.intellij.uiDesigner.core.Spacer();
        panel1.add(spacer2, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
